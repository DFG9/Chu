<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>趣味交互网站</title>
    <style>
        body {
            margin: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background: linear-gradient(45deg, #ff9a9e, #fad0c4, #fad0c4, #ffdde1);
            background-size: 400% 400%;
            animation: gradientBG 10s ease infinite;
            overflow: hidden;
        }
        @keyframes gradientBG {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        canvas {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }
        h1 {
            font-size: 3rem;
            color: white;
            text-shadow: 2px 2px 10px rgba(0,0,0,0.3);
            z-index: 1;
        }
    </style>
</head>
<body>
    <h1>趣味交互网站</h1>
    <canvas id="particleCanvas"></canvas>
    <script>
        const canvas = document.getElementById("particleCanvas");
        const ctx = canvas.getContext("2d");
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        let particles = [];

        class Particle {
            constructor(x, y, size, color, velocityX, velocityY) {
                this.x = x;
                this.y = y;
                this.size = size;
                this.color = color;
                this.velocityX = velocityX;
                this.velocityY = velocityY;
                this.alpha = 1;
            }
            draw() {
                ctx.globalAlpha = this.alpha;
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctx.fillStyle = this.color;
                ctx.fill();
            }
            update() {
                this.x += this.velocityX;
                this.y += this.velocityY;
                this.alpha -= 0.02;
            }
        }

        function createParticles(x, y) {
            for (let i = 0; i < 10; i++) {
                let size = Math.random() * 5 + 2;
                let color = `hsl(${Math.random() * 360}, 100%, 60%)`;
                let velocityX = (Math.random() - 0.5) * 4;
                let velocityY = (Math.random() - 0.5) * 4;
                particles.push(new Particle(x, y, size, color, velocityX, velocityY));
            }
        }

        function animateParticles() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            particles.forEach((particle, index) => {
                particle.update();
                particle.draw();
                if (particle.alpha <= 0) {
                    particles.splice(index, 1);
                }
            });
            requestAnimationFrame(animateParticles);
        }

        window.addEventListener("mousemove", (event) => {
            createParticles(event.clientX, event.clientY);
        });

        animateParticles();
    </script>
</body>
</html>
